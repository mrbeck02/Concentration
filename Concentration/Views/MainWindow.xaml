<Window x:Class="Concentration.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:Concentration.Views.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Concentration.Views"
        xmlns:models="clr-namespace:Concentration.Models"
        xmlns:viewModels="clr-namespace:Concentration.ViewModels"
        MinHeight="400" MinWidth="600"
        mc:Ignorable="d"
        Title="MainWindow" WindowStyle="None" WindowState="Maximized" ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        UseLayoutRounding="True">
    <Window.Resources>
        <ResourceDictionary>
            <viewModels:MainWindowViewModel x:Key="DesignViewModel" />

            <!-- Converters -->
            <converters:MathConverter x:Key="MathConverter" />
            <converters:IntSecondsToTimeConverter x:Key="IntSecondsToTimeConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <!-- Styles -->
            <Style x:Key="ExtraButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource ConcentrationYellowBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ConcentrationDropShadowRedBrush}"  />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Width" Value="100" />
                <Setter Property="Height" Value="40" />
                <Setter Property="BorderThickness" Value="4"/>
            </Style>
            
            <!-- Data Templates -->
            <DataTemplate x:Key="SquareTemplate" DataType="{x:Type models:Square}">
                <Grid x:Name="SquareGrid">

                    <!-- Prize Square -->
                    <Grid Background="Black" IsHitTestVisible="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, Window, 1}, Path=DataContext.NumberClickedCommand}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                <i:InvokeCommandAction Command="{Binding TogglePrizeVisibleCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PrizeVisible}" Value="False">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="1" To="0" Duration="0:0:0.2" Storyboard.TargetProperty="RenderTransform.ScaleX" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="1" Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.ScaleX"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" />
                        </Grid.RenderTransform>
                        <!--<TextBlock Text="{Binding Prize}" Foreground="White" FontSize="24" TextWrapping="WrapWithOverflow" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" />-->
                        <Image Source="{Binding Prize}" />
                        <Grid Background="{StaticResource ConcentrationWildYellowBrush}" ClipToBounds="True">
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsWild}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Border BorderBrush="Black" BorderThickness="8" />
                            <Border Background="Black" Margin="-10,10" x:Name="ThisBorder">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="-25" CenterX="{Binding ElementName=ThisBorder, Path=ActualWidth, Converter={StaticResource MathConverter}, ConverterParameter=(@VALUE/2.0)}" CenterY="{Binding ElementName=ThisBorder, Path=ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=(@VALUE/2.0)}" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Viewbox Stretch="Uniform" StretchDirection="Both" Margin="0,6,0,0">
                                    <TextBlock Foreground="{StaticResource ConcentrationWildYellowBrush}" Text="Wild!" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="48" FontFamily="Buxton Sketch" />
                                </Viewbox>
                            </Border>
                        </Grid>
                    </Grid>
                    
                    <!-- Number Square -->
                    <Grid Background="{StaticResource ConcentrationRedBrush}" IsHitTestVisible="True" Visibility="Visible">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, Window, 1}, Path=DataContext.NumberClickedCommand}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NumberVisible}" Value="False">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="1" To="0" Duration="0:0:0.2" Storyboard.TargetProperty="RenderTransform.ScaleX" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="1" Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.ScaleX"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" CenterX="{Binding ElementName=SquareGrid, Path=ActualWidth}" />
                        </Grid.RenderTransform>
                        <Border Background="{StaticResource ConcentrationYellowBrush}" Margin="8,16" />
                        <Border Background="{StaticResource ConcentrationYellowBrush}" Margin="16,8">
                            <TextBlock Text="{Binding Number}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource ConcentrationRedBrush}" FontSize="54" />
                        </Border>
                        <Border BorderBrush="Black" BorderThickness="1" />
                    </Grid>
                    
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid d:DataContext="{StaticResource DesignViewModel}" Background="{StaticResource ConcentrationBlueBrush}">
        
        <!--Game board -->
        <Border BorderThickness="20" BorderBrush="{StaticResource ConcentrationDropShadowRedBrush}" Margin="50">
            <Grid Background="White" >
                <Image Source="{Binding PuzzleImageSource}" />

                <ListBox ItemsSource="{Binding Squares}" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Hidden" HorizontalContentAlignment="Stretch" SelectionMode="Single" Background="Transparent" VerticalContentAlignment="Stretch" ItemTemplate="{StaticResource SquareTemplate}" ClipToBounds="True">
                    <ListBox.Template>
                        <ControlTemplate TargetType="ListBox">
                            <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Background="{TemplateBinding Background}">
                                <UniformGrid Columns="5" Margin="0" IsItemsHost="True" />
                            </Border>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="MaxWidth" Value="{Binding RelativeSource={RelativeSource FindAncestor, ListBox, 1}, Path=ActualWidth}" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    
                </ListBox>
            </Grid>
        </Border>

        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
            <Button Content="Winner" Command="{Binding WinnerCommand}" Style="{StaticResource ExtraButtonStyle}" />
            <Button Content="Reset" Command="{Binding ResetCommand}" Style="{StaticResource ExtraButtonStyle}" />
            <Button Content="Exit" Command="{Binding ExitCommand}" Style="{StaticResource ExtraButtonStyle}" Background="{StaticResource ConcentrationDropShadowRedBrush}" Foreground="White" />
        </StackPanel>

        <Border Background="Black" HorizontalAlignment="Center" VerticalAlignment="Top" Padding="6,0,6,3" CornerRadius="4" Margin="0,4,0,0" BorderBrush="White" BorderThickness="2" Visibility="{Binding TimerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" >
            <TextBlock Text="{Binding TimeLeft, Converter={StaticResource IntSecondsToTimeConverter}}" Foreground="White" FontSize="40" FontFamily="Consolas" TextAlignment="Center" />
        </Border>
    </Grid>
</Window>
